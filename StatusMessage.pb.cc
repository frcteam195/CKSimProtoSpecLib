// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StatusMessage.proto

#include "StatusMessage.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ValueMessage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ValueMessage_ValueMessage_2eproto;
class StatusMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StatusMessage> _instance;
} _StatusMessage_default_instance_;
static void InitDefaultsscc_info_StatusMessage_StatusMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_StatusMessage_default_instance_;
    new (ptr) ::StatusMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StatusMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StatusMessage_StatusMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StatusMessage_StatusMessage_2eproto}, {
      &scc_info_ValueMessage_ValueMessage_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_StatusMessage_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_StatusMessage_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_StatusMessage_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_StatusMessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::StatusMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::StatusMessage, encoders_),
  PROTOBUF_FIELD_OFFSET(::StatusMessage, accelerometers_),
  PROTOBUF_FIELD_OFFSET(::StatusMessage, gyroscopes_),
  PROTOBUF_FIELD_OFFSET(::StatusMessage, advanced_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::StatusMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_StatusMessage_default_instance_),
};

const char descriptor_table_protodef_StatusMessage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023StatusMessage.proto\032\022ValueMessage.prot"
  "o\"\233\001\n\rStatusMessage\022\037\n\010Encoders\030\001 \003(\0132\r."
  "ValueMessage\022%\n\016Accelerometers\030\002 \003(\0132\r.V"
  "alueMessage\022!\n\nGyroscopes\030\003 \003(\0132\r.ValueM"
  "essage\022\037\n\010Advanced\030\004 \003(\0132\r.ValueMessageb"
  "\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_StatusMessage_2eproto_deps[1] = {
  &::descriptor_table_ValueMessage_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_StatusMessage_2eproto_sccs[1] = {
  &scc_info_StatusMessage_StatusMessage_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_StatusMessage_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_StatusMessage_2eproto = {
  false, false, descriptor_table_protodef_StatusMessage_2eproto, "StatusMessage.proto", 207,
  &descriptor_table_StatusMessage_2eproto_once, descriptor_table_StatusMessage_2eproto_sccs, descriptor_table_StatusMessage_2eproto_deps, 1, 1,
  schemas, file_default_instances, TableStruct_StatusMessage_2eproto::offsets,
  file_level_metadata_StatusMessage_2eproto, 1, file_level_enum_descriptors_StatusMessage_2eproto, file_level_service_descriptors_StatusMessage_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_StatusMessage_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_StatusMessage_2eproto)), true);

// ===================================================================

void StatusMessage::InitAsDefaultInstance() {
}
class StatusMessage::_Internal {
 public:
};

void StatusMessage::clear_encoders() {
  encoders_.Clear();
}
void StatusMessage::clear_accelerometers() {
  accelerometers_.Clear();
}
void StatusMessage::clear_gyroscopes() {
  gyroscopes_.Clear();
}
void StatusMessage::clear_advanced() {
  advanced_.Clear();
}
StatusMessage::StatusMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  encoders_(arena),
  accelerometers_(arena),
  gyroscopes_(arena),
  advanced_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:StatusMessage)
}
StatusMessage::StatusMessage(const StatusMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      encoders_(from.encoders_),
      accelerometers_(from.accelerometers_),
      gyroscopes_(from.gyroscopes_),
      advanced_(from.advanced_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:StatusMessage)
}

void StatusMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StatusMessage_StatusMessage_2eproto.base);
}

StatusMessage::~StatusMessage() {
  // @@protoc_insertion_point(destructor:StatusMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StatusMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StatusMessage::ArenaDtor(void* object) {
  StatusMessage* _this = reinterpret_cast< StatusMessage* >(object);
  (void)_this;
}
void StatusMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StatusMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatusMessage& StatusMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StatusMessage_StatusMessage_2eproto.base);
  return *internal_default_instance();
}


void StatusMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:StatusMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  encoders_.Clear();
  accelerometers_.Clear();
  gyroscopes_.Clear();
  advanced_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatusMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ValueMessage Encoders = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_encoders(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ValueMessage Accelerometers = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_accelerometers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ValueMessage Gyroscopes = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_gyroscopes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ValueMessage Advanced = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_advanced(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StatusMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StatusMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ValueMessage Encoders = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_encoders_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_encoders(i), target, stream);
  }

  // repeated .ValueMessage Accelerometers = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_accelerometers_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_accelerometers(i), target, stream);
  }

  // repeated .ValueMessage Gyroscopes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_gyroscopes_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_gyroscopes(i), target, stream);
  }

  // repeated .ValueMessage Advanced = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_advanced_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_advanced(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StatusMessage)
  return target;
}

size_t StatusMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StatusMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ValueMessage Encoders = 1;
  total_size += 1UL * this->_internal_encoders_size();
  for (const auto& msg : this->encoders_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ValueMessage Accelerometers = 2;
  total_size += 1UL * this->_internal_accelerometers_size();
  for (const auto& msg : this->accelerometers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ValueMessage Gyroscopes = 3;
  total_size += 1UL * this->_internal_gyroscopes_size();
  for (const auto& msg : this->gyroscopes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ValueMessage Advanced = 4;
  total_size += 1UL * this->_internal_advanced_size();
  for (const auto& msg : this->advanced_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatusMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StatusMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StatusMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StatusMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StatusMessage)
    MergeFrom(*source);
  }
}

void StatusMessage::MergeFrom(const StatusMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StatusMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  encoders_.MergeFrom(from.encoders_);
  accelerometers_.MergeFrom(from.accelerometers_);
  gyroscopes_.MergeFrom(from.gyroscopes_);
  advanced_.MergeFrom(from.advanced_);
}

void StatusMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StatusMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusMessage::CopyFrom(const StatusMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StatusMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusMessage::IsInitialized() const {
  return true;
}

void StatusMessage::InternalSwap(StatusMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  encoders_.InternalSwap(&other->encoders_);
  accelerometers_.InternalSwap(&other->accelerometers_);
  gyroscopes_.InternalSwap(&other->gyroscopes_);
  advanced_.InternalSwap(&other->advanced_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StatusMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::StatusMessage* Arena::CreateMaybeMessage< ::StatusMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::StatusMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
