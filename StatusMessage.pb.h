// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StatusMessage.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_StatusMessage_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_StatusMessage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ValueMessage.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_StatusMessage_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_StatusMessage_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_StatusMessage_2eproto;
class StatusMessage;
class StatusMessageDefaultTypeInternal;
extern StatusMessageDefaultTypeInternal _StatusMessage_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::StatusMessage* Arena::CreateMaybeMessage<::StatusMessage>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class StatusMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:StatusMessage) */ {
 public:
  inline StatusMessage() : StatusMessage(nullptr) {}
  virtual ~StatusMessage();

  StatusMessage(const StatusMessage& from);
  StatusMessage(StatusMessage&& from) noexcept
    : StatusMessage() {
    *this = ::std::move(from);
  }

  inline StatusMessage& operator=(const StatusMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline StatusMessage& operator=(StatusMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StatusMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StatusMessage* internal_default_instance() {
    return reinterpret_cast<const StatusMessage*>(
               &_StatusMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(StatusMessage& a, StatusMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(StatusMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StatusMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StatusMessage* New() const final {
    return CreateMaybeMessage<StatusMessage>(nullptr);
  }

  StatusMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StatusMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StatusMessage& from);
  void MergeFrom(const StatusMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StatusMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "StatusMessage";
  }
  protected:
  explicit StatusMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_StatusMessage_2eproto);
    return ::descriptor_table_StatusMessage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEncodersFieldNumber = 1,
    kAccelerometersFieldNumber = 2,
    kGyroscopesFieldNumber = 3,
    kAdvancedFieldNumber = 4,
  };
  // repeated .ValueMessage Encoders = 1;
  int encoders_size() const;
  private:
  int _internal_encoders_size() const;
  public:
  void clear_encoders();
  ::ValueMessage* mutable_encoders(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ValueMessage >*
      mutable_encoders();
  private:
  const ::ValueMessage& _internal_encoders(int index) const;
  ::ValueMessage* _internal_add_encoders();
  public:
  const ::ValueMessage& encoders(int index) const;
  ::ValueMessage* add_encoders();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ValueMessage >&
      encoders() const;

  // repeated .ValueMessage Accelerometers = 2;
  int accelerometers_size() const;
  private:
  int _internal_accelerometers_size() const;
  public:
  void clear_accelerometers();
  ::ValueMessage* mutable_accelerometers(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ValueMessage >*
      mutable_accelerometers();
  private:
  const ::ValueMessage& _internal_accelerometers(int index) const;
  ::ValueMessage* _internal_add_accelerometers();
  public:
  const ::ValueMessage& accelerometers(int index) const;
  ::ValueMessage* add_accelerometers();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ValueMessage >&
      accelerometers() const;

  // repeated .ValueMessage Gyroscopes = 3;
  int gyroscopes_size() const;
  private:
  int _internal_gyroscopes_size() const;
  public:
  void clear_gyroscopes();
  ::ValueMessage* mutable_gyroscopes(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ValueMessage >*
      mutable_gyroscopes();
  private:
  const ::ValueMessage& _internal_gyroscopes(int index) const;
  ::ValueMessage* _internal_add_gyroscopes();
  public:
  const ::ValueMessage& gyroscopes(int index) const;
  ::ValueMessage* add_gyroscopes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ValueMessage >&
      gyroscopes() const;

  // repeated .ValueMessage Advanced = 4;
  int advanced_size() const;
  private:
  int _internal_advanced_size() const;
  public:
  void clear_advanced();
  ::ValueMessage* mutable_advanced(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ValueMessage >*
      mutable_advanced();
  private:
  const ::ValueMessage& _internal_advanced(int index) const;
  ::ValueMessage* _internal_add_advanced();
  public:
  const ::ValueMessage& advanced(int index) const;
  ::ValueMessage* add_advanced();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ValueMessage >&
      advanced() const;

  // @@protoc_insertion_point(class_scope:StatusMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ValueMessage > encoders_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ValueMessage > accelerometers_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ValueMessage > gyroscopes_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ValueMessage > advanced_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_StatusMessage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StatusMessage

// repeated .ValueMessage Encoders = 1;
inline int StatusMessage::_internal_encoders_size() const {
  return encoders_.size();
}
inline int StatusMessage::encoders_size() const {
  return _internal_encoders_size();
}
inline ::ValueMessage* StatusMessage::mutable_encoders(int index) {
  // @@protoc_insertion_point(field_mutable:StatusMessage.Encoders)
  return encoders_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ValueMessage >*
StatusMessage::mutable_encoders() {
  // @@protoc_insertion_point(field_mutable_list:StatusMessage.Encoders)
  return &encoders_;
}
inline const ::ValueMessage& StatusMessage::_internal_encoders(int index) const {
  return encoders_.Get(index);
}
inline const ::ValueMessage& StatusMessage::encoders(int index) const {
  // @@protoc_insertion_point(field_get:StatusMessage.Encoders)
  return _internal_encoders(index);
}
inline ::ValueMessage* StatusMessage::_internal_add_encoders() {
  return encoders_.Add();
}
inline ::ValueMessage* StatusMessage::add_encoders() {
  // @@protoc_insertion_point(field_add:StatusMessage.Encoders)
  return _internal_add_encoders();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ValueMessage >&
StatusMessage::encoders() const {
  // @@protoc_insertion_point(field_list:StatusMessage.Encoders)
  return encoders_;
}

// repeated .ValueMessage Accelerometers = 2;
inline int StatusMessage::_internal_accelerometers_size() const {
  return accelerometers_.size();
}
inline int StatusMessage::accelerometers_size() const {
  return _internal_accelerometers_size();
}
inline ::ValueMessage* StatusMessage::mutable_accelerometers(int index) {
  // @@protoc_insertion_point(field_mutable:StatusMessage.Accelerometers)
  return accelerometers_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ValueMessage >*
StatusMessage::mutable_accelerometers() {
  // @@protoc_insertion_point(field_mutable_list:StatusMessage.Accelerometers)
  return &accelerometers_;
}
inline const ::ValueMessage& StatusMessage::_internal_accelerometers(int index) const {
  return accelerometers_.Get(index);
}
inline const ::ValueMessage& StatusMessage::accelerometers(int index) const {
  // @@protoc_insertion_point(field_get:StatusMessage.Accelerometers)
  return _internal_accelerometers(index);
}
inline ::ValueMessage* StatusMessage::_internal_add_accelerometers() {
  return accelerometers_.Add();
}
inline ::ValueMessage* StatusMessage::add_accelerometers() {
  // @@protoc_insertion_point(field_add:StatusMessage.Accelerometers)
  return _internal_add_accelerometers();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ValueMessage >&
StatusMessage::accelerometers() const {
  // @@protoc_insertion_point(field_list:StatusMessage.Accelerometers)
  return accelerometers_;
}

// repeated .ValueMessage Gyroscopes = 3;
inline int StatusMessage::_internal_gyroscopes_size() const {
  return gyroscopes_.size();
}
inline int StatusMessage::gyroscopes_size() const {
  return _internal_gyroscopes_size();
}
inline ::ValueMessage* StatusMessage::mutable_gyroscopes(int index) {
  // @@protoc_insertion_point(field_mutable:StatusMessage.Gyroscopes)
  return gyroscopes_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ValueMessage >*
StatusMessage::mutable_gyroscopes() {
  // @@protoc_insertion_point(field_mutable_list:StatusMessage.Gyroscopes)
  return &gyroscopes_;
}
inline const ::ValueMessage& StatusMessage::_internal_gyroscopes(int index) const {
  return gyroscopes_.Get(index);
}
inline const ::ValueMessage& StatusMessage::gyroscopes(int index) const {
  // @@protoc_insertion_point(field_get:StatusMessage.Gyroscopes)
  return _internal_gyroscopes(index);
}
inline ::ValueMessage* StatusMessage::_internal_add_gyroscopes() {
  return gyroscopes_.Add();
}
inline ::ValueMessage* StatusMessage::add_gyroscopes() {
  // @@protoc_insertion_point(field_add:StatusMessage.Gyroscopes)
  return _internal_add_gyroscopes();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ValueMessage >&
StatusMessage::gyroscopes() const {
  // @@protoc_insertion_point(field_list:StatusMessage.Gyroscopes)
  return gyroscopes_;
}

// repeated .ValueMessage Advanced = 4;
inline int StatusMessage::_internal_advanced_size() const {
  return advanced_.size();
}
inline int StatusMessage::advanced_size() const {
  return _internal_advanced_size();
}
inline ::ValueMessage* StatusMessage::mutable_advanced(int index) {
  // @@protoc_insertion_point(field_mutable:StatusMessage.Advanced)
  return advanced_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ValueMessage >*
StatusMessage::mutable_advanced() {
  // @@protoc_insertion_point(field_mutable_list:StatusMessage.Advanced)
  return &advanced_;
}
inline const ::ValueMessage& StatusMessage::_internal_advanced(int index) const {
  return advanced_.Get(index);
}
inline const ::ValueMessage& StatusMessage::advanced(int index) const {
  // @@protoc_insertion_point(field_get:StatusMessage.Advanced)
  return _internal_advanced(index);
}
inline ::ValueMessage* StatusMessage::_internal_add_advanced() {
  return advanced_.Add();
}
inline ::ValueMessage* StatusMessage::add_advanced() {
  // @@protoc_insertion_point(field_add:StatusMessage.Advanced)
  return _internal_add_advanced();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ValueMessage >&
StatusMessage::advanced() const {
  // @@protoc_insertion_point(field_list:StatusMessage.Advanced)
  return advanced_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_StatusMessage_2eproto
